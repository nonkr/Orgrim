cmake_minimum_required(VERSION 2.8)

project(c_thread)

#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror -Wall -DORGRIM_DEBUG")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -DORGRIM_DEBUG")

add_executable(hellothread hellothread.c)
add_executable(hellothread2 hellothread2.c)
add_executable(thread_args thread_args.c)
add_executable(thread_joinable thread_joinable.c)
add_executable(thread_stacksize thread_stacksize.c)
add_executable(thread_mutex thread_mutex.c)
add_executable(thread_cond thread_cond.c)
add_executable(simple_threadpool_test simple_threadpool_test.c simple_threadpool.c)
add_executable(thread_priority thread_priority.c)
add_executable(thread_mutex_trylock thread_mutex_trylock.c)
add_executable(thread_once thread_once.c)
add_executable(setstack setstack.c)

find_package(Threads)
if(CMAKE_THREAD_LIBS_INIT)
    target_link_libraries(hellothread "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(hellothread2 "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_args "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_joinable "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_stacksize "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_mutex "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_cond "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(simple_threadpool_test "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_priority "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_mutex_trylock "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(thread_once "${CMAKE_THREAD_LIBS_INIT}")
    target_link_libraries(setstack "${CMAKE_THREAD_LIBS_INIT}")
endif()

target_link_libraries(thread_joinable m)
